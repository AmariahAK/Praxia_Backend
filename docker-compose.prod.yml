services:
  web:
    build: .
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - 8000
    env_file:
      - ./.env.prod
    environment:
      - DEBUG=False
    restart: always
    networks:
      - praxia-network

  redis:
    image: redis:7
    restart: always
    networks:
      - praxia-network

  celery:
    build: .
    command: celery -A praxia_backend worker -l INFO
    volumes:
      - media_volume:/app/media
    env_file:
      - ./.env
    environment:
      - DEBUG=False
    depends_on:
      - web
      - redis
    restart: always
    networks:
      - praxia-network

  celery-beat:
    build: .
    command: celery -A praxia_backend beat -l INFO
    env_file:
      - ./.env
    environment:
      - DEBUG=False
    depends_on:
      - web
      - redis
    restart: always
    networks:
      - praxia-network

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    restart: always
    networks:
      - praxia-network

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait ${!}; done;'"
    networks:
      - praxia-network

  monai:
    image: projectmonai/monai:latest
    platform: linux/amd64
    ports:
      - "8888:8888"
    volumes:
      - ./data/models:/models
    networks:
      - praxia-network
    shm_size: "1g"
    ipc: host
    ulimits:
      memlock: -1
      stack: 67108864
    command: ["python", "-c", "import monai; print('MONAI initialized successfully'); import time; while True: time.sleep(3600)"]
  sam:
    image: sam-med2d:latest
    build:
      context: .
      dockerfile: Dockerfile.sam
    volumes:
      - ./data/models:/models
    networks:
      - praxia-network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: always
    networks:
      - praxia-network

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - ./.env
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin_password}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: always
    networks:
      - praxia-network

  libretranslate:
    image: libretranslate/libretranslate
    ports:
      - "5001:5000"
    env_file:
      - ./.env
    environment:
      - LT_LOAD_ONLY=${LT_LOAD_ONLY:-es,en,fr}
      - LT_THREADS=${LT_THREADS:-4}
      - LT_MEMORY=${LT_MEMORY:-100M}
      - LT_UPDATE_MODELS=${LT_UPDATE_MODELS:-false}
    restart: always
    networks:
      - praxia-network

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)'
    restart: always
    networks:
      - praxia-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: always
    networks:
      - praxia-network

  redis-exporter:
    image: oliver006/redis_exporter
    env_file:
      - ./.env
    environment:
      - REDIS_ADDR=redis://${REDIS_HOST:-redis}:${REDIS_PORT:-6379}
    restart: always
    networks:
      - praxia-network

  postgres-exporter:
    image: wrouesnel/postgres_exporter
    env_file:
      - ./.env
    environment:
      - DATA_SOURCE_NAME=postgresql://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT:-5432}/${DB_NAME}?sslmode=disable
    restart: always
    networks:
      - praxia-network

networks:
  praxia-network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
  prometheus_data:
  grafana_data:
