
services:
  web:
    build: .
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - 8000
    env_file:
      - ./.env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DEBUG=False
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
    depends_on:
      - db
      - redis
    restart: always

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    restart: always

  redis:
    image: redis:7
    restart: always

  celery:
    build: .
    command: celery -A praxia_backend worker -l INFO
    volumes:
      - media_volume:/app/media
    env_file:
      - ./.env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DEBUG=False
    depends_on:
      - web
      - redis
    restart: always

  celery-beat:
    build: .
    command: celery -A praxia_backend beat -l INFO
    env_file:
      - ./.env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DEBUG=False
    depends_on:
      - web
      - redis
    restart: always

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  static_volume:
  media_volume:
